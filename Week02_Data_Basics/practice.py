"""
Week 02: 데이터 다루기 기초 실습 문제
Pandas를 사용한 데이터 분석 실습
"""

import pandas as pd
import numpy as np

print("=== 데이터 다루기 기초 실습 문제 ===\n")

# 실습용 데이터 생성
print("📊 실습용 데이터 준비")
print("-" * 30)

# 학생 성적 데이터
student_data = {
    '이름': ['김철수', '이영희', '박민수', '최지윤', '정하늘', '오세진', '윤미래', '장동건'],
    '학년': [1, 2, 1, 3, 2, 1, 3, 2],
    '수학': [85, 92, 76, 96, 88, 79, 94, 82],
    '영어': [90, 88, 82, 94, 86, 91, 89, 78],
    '과학': [78, 95, 80, 92, 84, 77, 91, 85],
    '출석일수': [180, 175, 182, 178, 179, 181, 177, 183]
}
df = pd.DataFrame(student_data)

print("학생 성적 데이터:")
print(df)
print()

# 문제 1: 기본 데이터 탐색
print("문제 1: 기본 데이터 탐색")
print("-" * 30)
print("다음 정보들을 출력하세요:")
print("1) 데이터의 크기 (행과 열의 개수)")
print("2) 열 이름 목록")
print("3) 각 열의 데이터 타입")
print("4) 수치형 열들의 기본 통계 정보")
print()

# 여기에 코드를 작성하세요
# TODO: df.shape, df.columns, df.dtypes, df.describe() 사용


print("문제 2: 데이터 선택과 필터링")
print("-" * 30)
print("다음 조건에 맞는 데이터를 출력하세요:")
print("1) 수학 점수만 출력")
print("2) 이름과 수학 점수만 출력")
print("3) 수학 점수가 85점 이상인 학생들")
print("4) 2학년 학생들의 모든 정보")
print("5) 수학과 영어 점수가 모두 80점 이상인 학생들")
print()

# 여기에 코드를 작성하세요
# TODO: 열 선택, 조건부 필터링 실습


print("문제 3: 새로운 열 추가와 계산")
print("-" * 30)
print("다음 열들을 추가하고 계산하세요:")
print("1) '평균' 열: 수학, 영어, 과학의 평균 (소수점 2자리)")
print("2) '총점' 열: 수학, 영어, 과학의 합계")
print("3) '등급' 열: 평균 90이상 A, 80이상 B, 70이상 C, 그 외 D")
print("4) '출석률' 열: 출석일수/185*100 (소수점 1자리)")
print()

# 여기에 코드를 작성하세요
# TODO: 새로운 열 추가 및 계산


print("문제 4: 데이터 정렬과 순위")
print("-" * 30)
print("다음과 같이 데이터를 정렬하고 순위를 매기세요:")
print("1) 평균 점수 기준 내림차순 정렬")
print("2) 학년별, 평균점수별 정렬 (학년 오름차순, 평균 내림차순)")
print("3) 평균 점수 순위 열 추가 (1위, 2위, ...)")
print()

# 여기에 코드를 작성하세요
# TODO: sort_values(), rank() 사용


print("문제 5: 그룹별 분석")
print("-" * 30)
print("학년별로 다음 통계를 계산하세요:")
print("1) 각 과목의 평균 점수")
print("2) 각 학년의 학생 수")
print("3) 각 학년의 평균 출석률")
print("4) 각 학년에서 평균 점수가 가장 높은 학생")
print()

# 여기에 코드를 작성하세요
# TODO: groupby() 사용한 집계 분석


print("문제 6: 조건부 연산")
print("-" * 30)
print("다음 조건들을 적용하세요:")
print("1) 평균 85점 이상이면 '우수', 75점 이상이면 '양호', 그 외 '보통'")
print("2) 출석률 95% 이상이면 '개근', 90% 이상이면 '우수', 그 외 '일반'")
print("3) 수학, 영어, 과학 중 가장 높은 점수 과목명 찾기")
print()

# 여기에 코드를 작성하세요
# TODO: np.where(), apply() 함수 활용


print("문제 7: 데이터 요약과 통계")
print("-" * 30)
print("다음 통계 정보들을 계산하세요:")
print("1) 전체 학생의 과목별 평균, 최고점, 최저점")
print("2) 각 등급(A, B, C, D)별 학생 수")
print("3) 학년별 평균 점수와 표준편차")
print("4) 상위 30% 학생들의 평균 점수")
print()

# 여기에 코드를 작성하세요
# TODO: 다양한 통계 함수 활용


print("문제 8: 판매 데이터 분석 (종합 문제)")
print("-" * 30)

# 판매 데이터 생성
sales_data = {
    '날짜': pd.date_range('2024-01-01', periods=10, freq='D'),
    '제품': ['A', 'B', 'A', 'C', 'B', 'A', 'C', 'B', 'A', 'C'],
    '카테고리': ['전자', '가구', '전자', '의류', '가구', '전자', '의류', '가구', '전자', '의류'],
    '판매량': [5, 3, 7, 2, 4, 6, 3, 5, 8, 4],
    '단가': [10000, 50000, 10000, 30000, 50000, 10000, 30000, 50000, 10000, 30000]
}
sales_df = pd.DataFrame(sales_data)
sales_df['매출'] = sales_df['판매량'] * sales_df['단가']

print("판매 데이터:")
print(sales_df)
print()

print("다음 분석을 수행하세요:")
print("1) 제품별 총 매출액")
print("2) 카테고리별 평균 판매량")
print("3) 일별 총 매출액")
print("4) 가장 많이 팔린 제품과 판매량")
print("5) 매출이 가장 높았던 날짜")
print("6) 전자 카테고리 제품들의 평균 단가")
print()

# 여기에 코드를 작성하세요
# TODO: 판매 데이터 종합 분석


print("문제 9: 데이터 저장하기")
print("-" * 30)
print("다음과 같이 데이터를 저장하세요:")
print("1) 우수 학생들(등급 A)만 필터링하여 'excellent_students.csv'로 저장")
print("2) 학년별 통계 요약을 'grade_summary.csv'로 저장")
print("3) 전체 학생 데이터에 계산된 모든 열 포함하여 'complete_student_data.csv'로 저장")
print()

# 여기에 코드를 작성하세요
# TODO: to_csv() 사용하여 파일 저장


print("문제 10: 고급 데이터 조작")
print("-" * 30)
print("다음 고급 기능들을 사용해보세요:")
print("1) pivot_table을 사용하여 학년별-과목별 평균 점수 테이블 생성")
print("2) 각 학생의 강점 과목(가장 높은 점수 과목) 찾기")
print("3) 과목간 상관관계 계산")
print("4) 평균 점수를 4분위수로 나누어 그룹 분류")
print()

# 여기에 코드를 작성하세요
# TODO: pivot_table, corr(), quantile() 등 고급 함수 활용


print("\n=== 실습 문제 완료! ===")
print("solution.py 파일에서 정답을 확인해보세요.")
print("💡 실제 데이터 분석에서는 이런 기법들이 조합되어 사용됩니다!")
